@using BelibaHoma.BLL.Enums
@model BelibaHoma.BLL.Models.AcademicInstitutionModel
@{
    Layout = null;
    var isRackaz = ViewBag.IsRackaz;
}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
  

        <div class="form-horizontal" style="direction: rtl">
            <h4>מוסד אקדמי</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <label class="control-label col-md-2">שם המוסד :</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">אזור :</label>
                <div class="col-md-10">
                    @{
                    //if is rackaz - cannot select area for the academic institution
                    object attr;
                    if (isRackaz)
                    {
                         attr = new { @class = "form-control", @disabled = "disabled" };
                    }
                    else
                    {
                        attr = new {@class = "form-control"};
                    }
                    }
                    @Html.EnumDropDownListFor(model => model.Area, attr)
                    @Html.ValidationMessageFor(model => model.Area, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">סוג המוסד : </label>
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.InstitutionType, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.InstitutionType, "", new { @class = "text-danger" })
                    @*<select name="InstitutionType" class="form-control">

                            @foreach (InstitutionType institutionType in Enum.GetValues(typeof(InstitutionType)))
                            {
                                <option value="@((int) institutionType)">@institutionType.ToDescription()</option>
                            }
                        </select>*@
                    @Html.ValidationMessageFor(model => model.InstitutionType, "", new {@class = "text-danger"})
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="שמור" class="btn btn-default" />
                </div>
            </div>
        </div>
        }

        <div>
            @Html.ActionLink("חזור לרשימה", "Index")
        </div>
    
 
